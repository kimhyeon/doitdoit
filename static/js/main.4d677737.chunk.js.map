{"version":3,"sources":["components/TaskItem.js","components/TaskList.js","components/FilterButton.js","components/FilterGroup.js","components/Header.js","components/GlobalStyles.js","App.js","serviceWorker.js","index.js"],"names":["StyledTaskItem","styled","div","StyledCheckBox","StyledTextarea","textarea","props","isDone","css","StyledRemoveBtn","TaskItem","editInput","React","createRef","minRows","maxRows","state","isEditing","isNew","content","rows","handleToggleEdit","setState","handleKeyDown","e","console","dir","key","target","blur","handleChangeCheckBox","task","handleUpdateTask","checked","handleChangeContent","previousRows","currentRows","scrollHeight","warn","scrollTop","value","handleRemoveBtn","handleRemoveTask","id","nextProps","nextState","this","prevProps","prevState","log","current","focus","name","type","onChange","htmlFor","placeholder","onClick","onBlur","onKeyDown","ref","Component","StyledButtonContainer","StyledButton","StyledTaskList","StyledNoTaskMessage","StyledIconLink","TaskList","handleClickCreateBtn","handleCreateTask","handleRemoveDonesBtn","handleRemoveDones","tasks","list","map","index","length","href","className","src","defaultProps","StyledFilter","span","active","FilterButton","handleClick","filter","handleChageFilter","textContent","filterCSS","FilterGroup","style","StyledHeader","StyledTitle","Header","GlobalStyles","createGlobalStyle","reset","App","getUID","Date","now","data","a","concat","localStorage","setItem","JSON","stringify","updatedData","test","componentDidMount","getItem","parse","filteredTask","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d677737.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledTaskItem = styled.div`\r\n  width: calc(100% - 30px);\r\n  background-color: #FFFFFF;\r\n  display: flex;\r\n  position: relative;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst StyledCheckBox = styled.div`\r\n  display: inline-block;\r\n  margin-right: 15px;\r\n  margin-top: 6px;\r\n\r\n  & > input {\r\n    display: none;\r\n  }\r\n\r\n  & > input + label {\r\n    cursor: pointer;\r\n    position: relative;\r\n  }\r\n\r\n  // Box\r\n  & > input + label:before {\r\n    content: '';\r\n    display: inline-block;\r\n    vertical-align: text-top;\r\n    width: 28px;\r\n    height: 28px;\r\n    border: 1px solid #878787;\r\n    border-radius: 5px;\r\n    background-color: white;\r\n  }\r\n\r\n  // Box focus\r\n  & > input:hover + label:before {\r\n    // background-color: #d0ebff;\r\n  }\r\n  \r\n  // Box checked\r\n  & > input:checked + label:before {\r\n    background: #2196F3;\r\n    border: 1px solid #2196F3;\r\n  }\r\n\r\n  & > input:checked + label:after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 8px;\r\n    top: 13px;\r\n    background: white;\r\n    width: 4px;\r\n    height: 4px;\r\n    box-shadow: \r\n    3px 0 0 white,\r\n    5px 0 0 white,\r\n    5px -3px 0 white,\r\n    5px -5px 0 white,\r\n    5px -7px 0 white,\r\n    5px -10px 0 white;\r\n    transform: rotate(45deg);\r\n  }\r\n\r\n  // Disabled state label.\r\n  & > input:disabled + label {\r\n    color: #b8b8b8;\r\n    cursor: auto;\r\n  }\r\n\r\n  // Disabled box.\r\n  & > input:disabled + label:before {\r\n    box-shadow: none;\r\n    background: #ddd;\r\n  }\r\n`;\r\n\r\nconst StyledTextarea = styled.textarea`\r\n  resize: none;\r\n  font-family: Roboto-regular;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  height: auto;\r\n  width: calc(100% - 78px);\r\n  overflow: auto;\r\n  box-sizing: border-box;\r\n  padding: 8px;\r\n  border: 1px solid #FFFFFF;\r\n  border-radius: 5px;\r\n  outline: none;\r\n\r\n  &:focus {\r\n    border-color: #5994FD;\r\n  }\r\n\r\n  ${props => {\r\n    if(props.isDone) {\r\n      return css`\r\n        text-decoration: line-through;\r\n        color: #2196F3;\r\n      `\r\n    }\r\n  }}\r\n\r\n`;\r\n\r\nconst StyledRemoveBtn = styled.div`\r\n  position: absolute;\r\n  right: 15px;\r\n  width: 28px;\r\n  height: 28px;\r\n  margin-top: 7px;\r\n  opacity: 0.3;\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:before, &:after {\r\n    position: absolute;\r\n    left: 13px;\r\n    content: '';\r\n    height: 29px;\r\n    width: 2px;\r\n    background-color: #333;\r\n  }\r\n\r\n  &:before {\r\n    transform: rotate(45deg);\r\n  }\r\n  &:after {\r\n    transform: rotate(-45deg);\r\n  }\r\n`;\r\n\r\n\r\nclass TaskItem extends Component {\r\n\r\n  editInput = React.createRef();\r\n\r\n  textarea = {\r\n    minRows: 1,\r\n    maxRows: 10\r\n  }\r\n\r\n  state = {\r\n    isEditing: this.props.isNew,\r\n    isDone: false,\r\n    content: '',\r\n    rows: 1\r\n  }\r\n\r\n  handleToggleEdit = () => {\r\n    const { isEditing } = this.state;\r\n\r\n    this.setState({\r\n      isEditing: !isEditing\r\n    });\r\n  }\r\n  \r\n  handleKeyDown = (e) => {\r\n    console.dir(e.key);\r\n    if(e.key === \"Escape\") {\r\n      e.target.blur();\r\n    }\r\n  }\r\n\r\n  handleChangeCheckBox = (e) => {\r\n    const { task, handleUpdateTask } = this.props;\r\n    console.dir(e.target.checked);\r\n\r\n    this.setState({\r\n      isDone: e.target.checked\r\n    });\r\n\r\n    task.isDone = e.target.checked;\r\n    handleUpdateTask({\r\n      ...task,      \r\n    });\r\n  }\r\n\r\n  handleChangeContent = (e) => {\r\n    \r\n    const { minRows, maxRows } = this.textarea;\r\n    const { rows } = this.state;\r\n    const textareaLineHeight = 24;\r\n    const textareaPaddingTotalHeight = 16;\r\n    \r\n    const previousRows = e.target.rows;\r\n    e.target.rows = minRows; // 1줄로 만들어서 스크롤 높이 구해오기\r\n    \r\n    const currentRows = ((e.target.scrollHeight - textareaPaddingTotalHeight) / textareaLineHeight);\r\n    console.warn(`${previousRows}-${e.target.scrollHeight}`, `${currentRows}-${e.target.scrollHeight - textareaPaddingTotalHeight}`);\r\n    \r\n    if (currentRows === previousRows) {\r\n      e.target.rows = currentRows;   \r\n    }\r\n    \r\n\t\tif (currentRows >= maxRows) {\r\n\t\t\te.target.rows = maxRows;\r\n\t\t\te.target.scrollTop = e.target.scrollHeight;\r\n    }\r\n    \r\n    console.warn(e.target.rows, ~~(e.target.scrollHeight / textareaLineHeight));\r\n\r\n    this.setState({\r\n      rows: currentRows > maxRows ? maxRows : currentRows,\r\n      content: e.target.value\r\n    });\r\n\r\n  }\r\n\r\n  handleRemoveBtn = () => {\r\n    const { handleRemoveTask, task } = this.props;\r\n    handleRemoveTask(task.id);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(this.state.content === nextState.content\r\n      && this.state.isEditing === nextState.isEditing \r\n      && this.props.task === nextProps.task) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { id, isDone, content } = this.props.task;\r\n\r\n    console.log(\"#componentDidUpdate\", !prevState.isEditing, this.state.isEditing)\r\n    if(!prevState.isEditing && this.state.isEditing) {\r\n      this.setState({\r\n        isDone: isDone,\r\n        content: content\r\n      });\r\n    }\r\n\r\n    // blur 시 update task\r\n    if(prevState.isEditing && !this.state.isEditing) {\r\n      this.props.handleUpdateTask({\r\n        id: id,\r\n        isDone: this.state.isDone,\r\n        content: this.state.content\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { isNew } = this.props;\r\n    if(isNew) {\r\n      this.editInput.current.focus();\r\n      console.warn(\"is new\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isNew } = this.props;\r\n    const { id, isDone, content } = this.props.task;\r\n    const { isEditing, rows } = this.state;\r\n\r\n    return (\r\n      <StyledTaskItem>\r\n        <StyledCheckBox>\r\n          <input\r\n            id={`${id}_ID`}\r\n            name=\"isDone\"\r\n            type=\"checkbox\"\r\n            onChange={this.handleChangeCheckBox}\r\n            checked={isDone}\r\n          />\r\n          <label htmlFor={`${id}_ID`}></label>\r\n        </StyledCheckBox>\r\n        {\r\n          (isEditing === false && isNew === false) ? (\r\n            <StyledTextarea\r\n              name=\"content\"\r\n              placeholder=\"Type Your Task Here\"\r\n              value={content}\r\n              onClick={this.handleToggleEdit}\r\n              onChange={this.handleChangeContent}\r\n              rows={rows}\r\n            />\r\n          ) : (\r\n            <StyledTextarea \r\n              name=\"content\"\r\n              placeholder=\"Type Your Task Here\"\r\n              value={this.state.content}\r\n              onBlur={this.handleToggleEdit}\r\n              onChange={this.handleChangeContent}\r\n              onKeyDown={this.handleKeyDown}\r\n              ref={this.editInput}\r\n              rows={rows}\r\n            />\r\n          )\r\n        }\r\n        <StyledRemoveBtn onClick={this.handleRemoveBtn}></StyledRemoveBtn>\r\n      </StyledTaskItem>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;","import React, { Component } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledButtonContainer = styled.div`\r\n  text-align: center;\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst StyledButton = styled.div`\r\n  color: #FFFFFF;\r\n  display: inline-block;\r\n  background-color: #2196F3;\r\n  border-radius: 7px;\r\n  padding: 8px 14px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n\r\n  &:first-child {\r\n    margin-right: 10px;\r\n  }\r\n\r\n  ${props => {\r\n    if(props.id === \"removeDones\") {\r\n      return css`\r\n        background-color: #EA4C89\r\n      `\r\n    }\r\n  }}\r\n`;\r\n\r\n// text-align: center;\r\nconst StyledTaskList = styled.div`\r\n  margin: 0 auto;\r\n  width: 95%;\r\n  max-width: 800px;\r\n`;\r\n\r\nconst StyledNoTaskMessage = styled.div`\r\n  margin: 0 auto;\r\n  width: 95%;\r\n  max-width: 800px;\r\n\r\n  & > div.message {\r\n    font-size: 20px;\r\n    font-family: Roboto-Regular;\r\n    color: rgba(0,0,0,.4);\r\n    text-align: center;\r\n    user-select:none;\r\n  }\r\n`;\r\n\r\nconst StyledIconLink = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 20px;\r\n  font-family: Roboto-Regular;\r\n  user-select:none;\r\n\r\n  & > a {\r\n    text-decoration: none;\r\n    color: rgba(0,0,0,.4);\r\n\r\n    &:active, &:visited {\r\n      color: rgba(0,0,0,.4);\r\n    }\r\n    &:hover {\r\n      color: rgba(0,0,0,.6);\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n\r\n  & > a > img.icon {\r\n    width: 216px;\r\n    display: block;\r\n    text-align: center;\r\n    padding: 15px;\r\n    padding-bottom: 0;\r\n    margin: 0 auto;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & > a > div {\r\n    text-align: center;\r\n  }\r\n\r\n  & > a > div > span {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nclass TaskList extends Component {\r\n\r\n  static defaultProps = {\r\n    tasks: []\r\n  }\r\n\r\n  handleClickCreateBtn = () => {\r\n    const { handleCreateTask } = this.props;\r\n    handleCreateTask({\r\n      isDone: false,\r\n      content: ''\r\n    });\r\n  }\r\n\r\n  handleRemoveDonesBtn = () => {\r\n    const { handleRemoveDones } = this.props;\r\n    console.log(handleRemoveDones);\r\n    handleRemoveDones();\r\n  }\r\n\r\n  render() {\r\n\r\n    console.log(\"render\");\r\n\r\n    const { tasks, handleUpdateTask, handleRemoveTask } = this.props;\r\n    const list = tasks.map((task, index) => {\r\n      if(index === 0 && task.content === '') {\r\n        task.isNew = true;\r\n      } else {\r\n        task.isNew = false;\r\n      }\r\n\r\n      return (\r\n        <TaskItem key={task.id}\r\n          task={task}\r\n          isNew={task.isNew}\r\n          handleUpdateTask={handleUpdateTask}\r\n          handleRemoveTask={handleRemoveTask}\r\n        />\r\n      )\r\n    });\r\n  \r\n    \r\n\r\n    return (\r\n      <div>\r\n        <StyledButtonContainer>\r\n          <StyledButton id=\"addTask\" onClick={this.handleClickCreateBtn}>Add New Task</StyledButton>\r\n          <StyledButton id=\"removeDones\" onClick={this.handleRemoveDonesBtn}>Remove Dones</StyledButton>\r\n        </StyledButtonContainer>\r\n        { \r\n          list.length > 0 ? (\r\n            <StyledTaskList>\r\n            {list}\r\n            </StyledTaskList>\r\n          ) : (\r\n            <StyledNoTaskMessage>\r\n              <StyledIconLink>\r\n                <a href=\"https://comic.naver.com/webtoon/list.nhn?titleId=708452\" target=\"_blank\">\r\n                  <img className=\"icon\" src=\"/images/chunbae.png\"></img>\r\n                  <div>\r\n                    <span>©️ NAVER WEBTOON CORP. of '냐한남자'</span>\r\n                  </div>\r\n                </a>\r\n              </StyledIconLink>\r\n              <div className=\"message\">No task to display.</div>\r\n            </StyledNoTaskMessage>\r\n          )\r\n        }\r\n\r\n\r\n      </div>\r\n    );\r\n\r\n  };\r\n\r\n}\r\n\r\nexport default TaskList;","import React, { Component, Fragment } from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst StyledFilter = styled.span`\r\n  font-size: 16px;\r\n  padding: 10px 12px;\r\n  margin-left: 10px;\r\n  display: inline-block;\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: #E2EEF5;\r\n    border-radius: 7px;\r\n    color: #3A8BBB;\r\n  }\r\n\r\n  &:first-child {\r\n    margin-left: 0;\r\n  }\r\n\r\n  ${props => {\r\n    if(props.active) {\r\n      return css`\r\n        background-color: #E2EEF5;\r\n        border-radius: 7px;\r\n        color: #3A8BBB;\r\n      `;\r\n    }\r\n  }}\r\n\r\n`;\r\n\r\nclass FilterButton extends Component {\r\n\r\n  handleClick = (e) => {\r\n    const { filter, handleChageFilter } = this.props;\r\n    console.log(this.props);\r\n    console.dir(e.target.textContent);\r\n    if(filter !== e.target.textContent) {\r\n      handleChageFilter(e.target.textContent);\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if(this.props.active === nextProps.active) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { name, active } = this.props;\r\n    console.log(\"filter btn render\", name);\r\n\r\n    return (\r\n      <Fragment>\r\n\r\n        {\r\n          active ?\r\n          (\r\n            <StyledFilter onClick={this.handleClick} active>\r\n            {name}\r\n            </StyledFilter>\r\n          ) :\r\n          (\r\n            <StyledFilter onClick={this.handleClick}>\r\n            {name}\r\n            </StyledFilter>\r\n          )\r\n        } \r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterButton;","import React, { Component } from 'react';\r\nimport FilterButton from './FilterButton';\r\n\r\nconst filterCSS = {\r\n  'textAlign': 'center',\r\n  'marginTop': '10px',\r\n  'paddingBottom': '15px'\r\n}\r\n\r\nclass FilterGroup extends Component {\r\n  render() {\r\n    const { filter, handleChageFilter } = this.props;\r\n    \r\n    return(\r\n      <div style={filterCSS}>\r\n        <FilterButton \r\n          name={'All'}\r\n          active={filter === 'All' ?  true : false}\r\n          handleChageFilter={handleChageFilter}\r\n        />\r\n        <FilterButton\r\n          name={'Task'}\r\n          active={filter === 'Task' ?  true : false}\r\n          handleChageFilter={handleChageFilter}\r\n        />\r\n        <FilterButton\r\n          name={'Done'}\r\n          active={filter === 'Done' ?  true : false}\r\n          handleChageFilter={handleChageFilter}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilterGroup;","import React, { Component } from 'react';\r\nimport FilterGroup from './FilterGroup'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledHeader = styled.div`\r\n  position: relative;\r\n  background-color: #FFFFFF;\r\n`;\r\n\r\nconst StyledTitle = styled.span`\r\n  font-family: 'Pacifico-Regular';\r\n  font-size: 25px;\r\n  display: inline-block;\r\n  margin-left: 35px;\r\n  margin-top 20px;\r\n`;\r\n\r\nclass Header extends Component {\r\n\r\n  render() {\r\n    const { filter, handleChageFilter } = this.props;\r\n    \r\n    return (\r\n      <StyledHeader>\r\n        <StyledTitle>\r\n          doitdoittask\r\n        </StyledTitle>\r\n        <FilterGroup filter={filter} handleChageFilter={handleChageFilter}/>\r\n      </StyledHeader>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;  ","import { createGlobalStyle } from 'styled-components'\r\nimport reset from 'styled-reset'\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  ${reset};\r\n  html {\r\n    font-family: 'Roboto-Regular';\r\n  }\r\n`;\r\n\r\nexport default GlobalStyles;","import React, { Component } from 'react';\r\nimport TaskList from './components/TaskList';\r\nimport FilterGroup from './components/FilterGroup';\r\nimport Header from './components/Header';\r\n\r\nimport GlobalStyles from './components/GlobalStyles';\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    filter: 'All',\r\n    tasks: [\r\n      // { id: \"uid_1583003467204\", isDone: false, content: \"study react\"},\r\n      // { id: \"uid_1583003467037\", isDone: true, content: \"cokking\"}\r\n    ]\r\n  }\r\n\r\n  getUID = () => {\r\n    return `uid_${Date.now()}`;\r\n  }\r\n\r\n  handleChageFilter = (data) => {\r\n    this.setState({\r\n      filter: data\r\n    });\r\n  }\r\n\r\n  handleCreateTask = async (data) => {\r\n    const { tasks } = this.state;\r\n    await this.setState({\r\n      tasks: [{id: this.getUID(), ...data}].concat(tasks)\r\n    });\r\n    localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n\r\n  }\r\n\r\n  handleUpdateTask = async (updatedData) => {\r\n    const { tasks } = this.state;\r\n\r\n    let test = tasks.map(task => {\r\n      if(task.id === updatedData.id) {\r\n        return {\r\n          ...updatedData\r\n        }\r\n      }\r\n      return task;\r\n    });\r\n\r\n    console.log(\"test\", updatedData, test);\r\n\r\n    await this.setState({\r\n      tasks: tasks.map(task => {\r\n        if(task.id === updatedData.id) {\r\n          return {\r\n            ...updatedData\r\n          }\r\n        }\r\n        return task;\r\n      })\r\n    });\r\n    localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n\r\n  }\r\n\r\n  handleRemoveTask = async (id) => {\r\n    const { tasks } = this.state;\r\n    await this.setState({\r\n      tasks: tasks.filter(task => task.id !== id)\r\n    });\r\n    localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n  }\r\n\r\n  handleRemoveDones = async () => {\r\n    const { tasks } = this.state;\r\n    await this.setState({\r\n      tasks: tasks.filter(task => task.isDone === false)\r\n    });\r\n    localStorage.setItem('tasks', JSON.stringify(this.state.tasks));\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const tasks = localStorage.getItem('tasks');\r\n    if(tasks) {\r\n      this.setState({\r\n        tasks: JSON.parse(tasks)\r\n      })\r\n    } else {\r\n      console.log('No tasks');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { tasks, filter } = this.state;\r\n\r\n    let filteredTask = tasks.filter((task) => {\r\n      if(filter === 'All') {\r\n        return task;\r\n      } else if(filter === 'Task') {\r\n        return task.isDone === false;\r\n      } else {\r\n        return task.isDone === true;\r\n      }\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <GlobalStyles />\r\n        <Header\r\n          filter={this.state.filter}\r\n          handleChageFilter={this.handleChageFilter}\r\n        />\r\n        <TaskList \r\n          tasks={filteredTask}\r\n          handleCreateTask={this.handleCreateTask}\r\n          handleUpdateTask={this.handleUpdateTask}\r\n          handleRemoveTask={this.handleRemoveTask}\r\n          handleRemoveDones={this.handleRemoveDones}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}